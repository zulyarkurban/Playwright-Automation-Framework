{"version":3,"file":"step_arguments.js","sourceRoot":"","sources":["../src/step_arguments.ts"],"names":[],"mappings":";;;;;AASA,8CAUC;AAnBD,0DAA4B;AAE5B,mDAA+C;AAO/C,SAAgB,iBAAiB,CAC/B,GAAgC,EAChC,OAA0C;IAE1C,IAAI,IAAA,6BAAa,EAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;QACjC,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;IACzC,CAAC;SAAM,IAAI,IAAA,6BAAa,EAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC;QACxC,OAAO,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;IACzC,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,0BAA0B,mBAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;AAChE,CAAC","sourcesContent":["import util from 'node:util'\nimport * as messages from '@cucumber/messages'\nimport { doesHaveValue } from './value_checker'\n\nexport interface IPickleStepArgumentFunctionMap<T> {\n  dataTable: (arg: messages.PickleTable) => T\n  docString: (arg: messages.PickleDocString) => T\n}\n\nexport function parseStepArgument<T>(\n  arg: messages.PickleStepArgument,\n  mapping: IPickleStepArgumentFunctionMap<T>\n): T {\n  if (doesHaveValue(arg.dataTable)) {\n    return mapping.dataTable(arg.dataTable)\n  } else if (doesHaveValue(arg.docString)) {\n    return mapping.docString(arg.docString)\n  }\n  throw new Error(`Unknown step argument: ${util.inspect(arg)}`)\n}\n"]}