{"version":3,"file":"playwright-service-global-teardown.js","sourceRoot":"","sources":["../../../src/core/global/playwright-service-global-teardown.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAElC,+BAA+B;AAE/B,+FAA+D;AAC/D,oDAAmE;AACnE,yFAAyD;AAEzD,MAAM,sCAAsC,GAAG,KAAK,EAAE,MAAkB,EAAiB,EAAE;IACzF,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAA,cAAO,EAAC,MAAM,CAAC,UAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IAChF,IAAI,0BAA0B,GAAQ,IAAI,CAAC;IAC3C,IAAI,wBAAc,CAAC,cAAc,IAAI,OAAO,wBAAc,CAAC,cAAc,KAAK,QAAQ,EAAE,CAAC;QACvF,0BAA0B,GAAG,MAAM,IAAA,qCAA0B,EAC3D,OAAO,EACP,wBAAc,CAAC,cAAc,CAC9B,CAAC;IACJ,CAAC;IAED,gCAAsB,CAAC,cAAc,EAAE,CAAC;IACxC,IAAI,0BAA0B,EAAE,CAAC;QAC/B,MAAM,0BAA0B,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;AACH,CAAC,CAAC;AAEF,kBAAe,sCAAsC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { dirname } from \"path\";\nimport type { FullConfig } from \"../../common/types\";\nimport playwrightServiceEntra from \"../playwrightServiceEntra\";\nimport { loadCustomerGlobalFunction } from \"../../common/executor\";\nimport customerConfig from \"../../common/customerConfig\";\n\nconst playwrightServiceGlobalTeardownWrapper = async (config: FullConfig): Promise<void> => {\n  const rootDir = config.configFile ? dirname(config.configFile!) : process.cwd();\n  let customerGlobalTeardownFunc: any = null;\n  if (customerConfig.globalTeardown && typeof customerConfig.globalTeardown === \"string\") {\n    customerGlobalTeardownFunc = await loadCustomerGlobalFunction(\n      rootDir,\n      customerConfig.globalTeardown,\n    );\n  }\n\n  playwrightServiceEntra.globalTeardown();\n  if (customerGlobalTeardownFunc) {\n    await customerGlobalTeardownFunc(config);\n  }\n};\n\nexport default playwrightServiceGlobalTeardownWrapper;\n"]}